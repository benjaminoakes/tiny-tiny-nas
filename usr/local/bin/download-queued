#!/var/mnt/usbms/bin/sh

hostname="nas"

redis_hostname=""
redis_port=""
redis_password=""
queue=""
wait_s="5"

base_path='/var/mnt/usbms/serv'

log_info() {
  echo "[info] $1"
}

iso8601() {
  date -u +"%Y-%m-%dT%H:%M:%SZ"
}

redis() {
  redis-cli -a "$redis_password" -h "$redis_hostname" -p "$redis_port" $*
}

register_worker() {
  redis <<EOF
    smembers resque:workers
    sadd     resque:workers $hostname:$$:$queue
    set      resque:worker:$hostname:$$:$queue:started "$(iso8601)"
EOF
}

unregister_worker() {
  log_info "stopping"
  redis <<EOF
    get  resque:worker:$hostname:$$:$queue
    srem resque:workers $hostname:$$:$queue
    del  resque:worker:$hostname:$$:$queue
    del  resque:worker:$hostname:$$:$queue:started
    del  resque:stat:processed:$hostname:$$:$queue
    del  resque:stat:failed:$hostname:$$:$queue
EOF

  log_info "stopped"
  exit 0
}

ignore_sighup() {
  log_info "ignoring SIGHUP"
}

run_job() {
  payload="$1"

  split=$( echo $payload | tr '","' '"\n"' )
  class=$( echo "$split" | head -n 1 | sed 's/^{"class":"//' | sed 's/"$//' )
  
  if [ "$class" == "DownloadJob" ]; then
    arg1=$( echo "$split" | tail -n 2 | head -n 1 | sed 's/^"args":\["//' | sed 's/"$//' )
    arg2=$( echo "$split" | tail -n 1 | sed 's/^"//' | sed 's/"\]}//' )
  else
    arg=$( echo "$split" | tail -n 1 | sed 's/^"args":\["//' | sed 's/"\]}//' )
  fi

  job_output_file="$base_path/Jobs/$class.html"
  mkdir -p "$(dirname "$job_output_file")"

  if [ ! -f "$job_output_file" ]; then
    echo '<plaintext>' >> "$job_output_file"
  fi

  case $class in
  DateJob)
    echo $(iso8601) >> "$job_output_file"
    ;;
  DownloadJob)
    cd "$base_path/Jobs/DownloadJob"

    if [ -f "$arg2" ]; then
      echo "File exists, skipping $arg2"
    else
      wget "$arg1" -O "$arg2"
      echo "$arg1" >> "$job_output_file"
    fi

    cd -
    ;;
  EchoJob)
    echo "$arg" >> "$job_output_file"
    ;;
  GenerateMD5Job)
    md5sum=`md5sum "$base_path/$arg"`
    echo "$md5sum" >> "$job_output_file"
    ;;
  ExtractTarGzJob)
    cd "$base_path/$(dirname "$arg")"
    tar xvfz "$(basename "$arg")"
    echo "$arg" >> "$job_output_file"
    cd -
    ;;
  ExtractGzJob)
    cd "$base_path/$(dirname "$arg")"
    gunzip "$(basename "$arg")"
    echo "$arg" >> "$job_output_file"
    cd -
    ;;
  ExtractZipJob)
    cd "$base_path/$(dirname "$arg")"
    unzip "$(basename "$arg")"
    echo "$arg" >> "$job_output_file"
    cd -
    ;;
  esac
}

log_info "started"
log_info "\$0:             $0"
log_info "\$\$:             $$"
log_info "date:           $(iso8601)"
log_info "hostname:       $hostname"
log_info "redis_hostname: $redis_hostname"
log_info "redis_port:     $redis_port"
log_info "queue:          $queue"
log_info "wait_s:         $wait_s"
log_info ""

register_worker
trap ignore_sighup SIGHUP
trap unregister_worker SIGINT SIGTERM

while true; do
  payload=$(redis "lpop" "resque:queue:$queue")

  if [ "$payload" != '' ]; then
    log_info "payload:        $payload"
    log_info "date:           $(iso8601)"
    
    redis <<EOF
      set resque:worker:$hostname:$$:$queue '{"queue":"$queue","run_at":"$(iso8601)","payload":$payload}'
EOF
    
    run_job "$payload"
    
    redis <<EOF
      incrby resque:stat:processed 1
      incrby resque:stat:processed:$hostname:$$:$queue 1
      del    resque:worker:$hostname:$$:$queue
EOF
  else
    sleep "$wait_s"
  fi
done
